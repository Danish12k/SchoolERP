{
  "version": 3,
  "sources": ["../../../../../../node_modules/@angular/cdk/fesm2022/dispose-view-repeater-strategy.mjs"],
  "sourcesContent": ["import { _ViewRepeaterOperation } from './recycle-view-repeater-strategy.mjs';\n\n/**\n * A repeater that destroys views when they are removed from a\n * `ViewContainerRef`. When new items are inserted into the container,\n * the repeater will always construct a new embedded view for each item.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _DisposeViewRepeaterStrategy {\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                const insertContext = itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = viewContainerRef.createEmbeddedView(insertContext.templateRef, insertContext.context, insertContext.index);\n                operation = _ViewRepeaterOperation.INSERTED;\n            }\n            else if (currentIndex == null) {\n                viewContainerRef.remove(adjustedPreviousIndex);\n                operation = _ViewRepeaterOperation.REMOVED;\n            }\n            else {\n                view = viewContainerRef.get(adjustedPreviousIndex);\n                viewContainerRef.move(view, currentIndex);\n                operation = _ViewRepeaterOperation.MOVED;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view?.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() { }\n}\n\nexport { _DisposeViewRepeaterStrategy };\n\n"],
  "mappings": ";;;;;AAWA,IAAM,+BAAN,MAAmC;AAAA,EAC/B,aAAa,SAAS,kBAAkB,oBAAoB,mBAAmB,iBAAiB;AAC5F,YAAQ,iBAAiB,CAAC,QAAQ,uBAAuB,iBAAiB;AACtE,UAAI;AACJ,UAAI;AACJ,UAAI,OAAO,iBAAiB,MAAM;AAC9B,cAAM,gBAAgB,mBAAmB,QAAQ,uBAAuB,YAAY;AACpF,eAAO,iBAAiB,mBAAmB,cAAc,aAAa,cAAc,SAAS,cAAc,KAAK;AAChH,oBAAY,uBAAuB;AAAA,MACvC,WACS,gBAAgB,MAAM;AAC3B,yBAAiB,OAAO,qBAAqB;AAC7C,oBAAY,uBAAuB;AAAA,MACvC,OACK;AACD,eAAO,iBAAiB,IAAI,qBAAqB;AACjD,yBAAiB,KAAK,MAAM,YAAY;AACxC,oBAAY,uBAAuB;AAAA,MACvC;AACA,UAAI,iBAAiB;AACjB,wBAAgB;AAAA,UACZ,SAAS,MAAM;AAAA,UACf;AAAA,UACA;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,SAAS;AAAA,EAAE;AACf;",
  "names": []
}
