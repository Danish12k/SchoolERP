{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ng-matero/extensions/fesm2022/mtxButton.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { inject, ElementRef, ViewContainerRef, Renderer2, booleanAttribute, Input, Directive, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinner, MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nclass MatButtonLoading {\n  constructor() {\n    this._elementRef = inject(ElementRef);\n    this._viewContainerRef = inject(ViewContainerRef);\n    this._renderer = inject(Renderer2);\n    this.spinner = null;\n    this.loading = false;\n    this.disabled = false;\n  }\n  ngOnChanges(changes) {\n    if (!changes.loading) {\n      return;\n    }\n    if (changes.loading.currentValue) {\n      this._elementRef.nativeElement.classList.add('mat-button-loading');\n      if (!this.disabled) {\n        setTimeout(() => {\n          this._elementRef.nativeElement.classList.add('mat-mdc-button-disabled');\n          this._elementRef.nativeElement.setAttribute('disabled', 'true');\n        });\n      }\n      this.createSpinner();\n    } else if (!changes.loading.firstChange) {\n      this._elementRef.nativeElement.classList.remove('mat-button-loading');\n      if (!this.disabled) {\n        setTimeout(() => {\n          this._elementRef.nativeElement.classList.remove('mat-mdc-button-disabled');\n          this._elementRef.nativeElement.removeAttribute('disabled');\n        });\n      }\n      this.destroySpinner();\n    }\n  }\n  createSpinner() {\n    if (!this.spinner) {\n      this.spinner = this._viewContainerRef.createComponent(MatProgressSpinner);\n      this.spinner.instance.color = this.color;\n      this.spinner.instance.diameter = 24;\n      this.spinner.instance.mode = 'indeterminate';\n      this._renderer.appendChild(this._elementRef.nativeElement, this.spinner.instance._elementRef.nativeElement);\n    }\n  }\n  destroySpinner() {\n    if (this.spinner) {\n      this.spinner.destroy();\n      this.spinner = null;\n    }\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function MatButtonLoading_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatButtonLoading)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatButtonLoading,\n      selectors: [[\"\", \"mat-button\", \"\", \"loading\", \"\"], [\"\", \"matButton\", \"\", \"loading\", \"\"], [\"\", \"mat-raised-button\", \"\", \"loading\", \"\"], [\"\", \"mat-stroked-button\", \"\", \"loading\", \"\"], [\"\", \"mat-flat-button\", \"\", \"loading\", \"\"], [\"\", \"mat-icon-button\", \"\", \"loading\", \"\"], [\"\", \"matIconButton\", \"\", \"loading\", \"\"], [\"\", \"mat-fab\", \"\", \"loading\", \"\"], [\"\", \"matFab\", \"\", \"loading\", \"\"], [\"\", \"mat-mini-fab\", \"\", \"loading\", \"\"], [\"\", \"matMiniFab\", \"\", \"loading\", \"\"]],\n      inputs: {\n        loading: [2, \"loading\", \"loading\", booleanAttribute],\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        color: \"color\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatButtonLoading, [{\n    type: Directive,\n    args: [{\n      selector: `[mat-button][loading], [matButton][loading],\n             [mat-raised-button][loading],\n             [mat-stroked-button][loading],\n             [mat-flat-button][loading],\n             [mat-icon-button][loading], [matIconButton][loading],\n             [mat-fab][loading], [matFab][loading],\n             [mat-mini-fab][loading], [matMiniFab][loading]`\n    }]\n  }], null, {\n    loading: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    color: [{\n      type: Input\n    }]\n  });\n})();\nclass MtxButtonModule {\n  /** @nocollapse */static {\n    this.ɵfac = function MtxButtonModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxButtonModule)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MtxButtonModule,\n      imports: [CommonModule, MatButtonModule, MatProgressSpinnerModule, MatButtonLoading],\n      exports: [MatButtonLoading]\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, MatButtonModule, MatProgressSpinnerModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxButtonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatButtonModule, MatProgressSpinnerModule, MatButtonLoading],\n      exports: [MatButtonLoading]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatButtonLoading, MtxButtonModule };\n"],
  "mappings": "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",
  "names": []
}
